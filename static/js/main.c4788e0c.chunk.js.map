{"version":3,"sources":["pages/LandingPage.tsx","components/PostDetailsDialog.tsx","components/PostCard.tsx","components/PostGrid.tsx","components/SettingsMenu.tsx","components/SubmitPostDialog.tsx","Context.tsx","components/SearchStack.tsx","components/Appbar.tsx","pages/Dashboard.tsx","pages/NotFoundPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LandingPage","props","handleLogin","a","window","open","process","Container","maxWidth","Stack","direction","alignItems","Button","variant","onClick","PostDetailsDialog","dateString","post","date","Date","ts","getDate","currentDate","toLocaleTimeString","toLocaleDateString","Dialog","fullWidth","onClose","setDialogOpen","DialogTitle","title","DialogContent","style","color","paddingLeft","paddingRight","paddingBottom","paddingTop","user_name","tags","length","spacing","map","item","index","size","DialogContentText","padding","content","PostCard","Card","justifyContent","marginX","Typography","marginTop","marginLeft","textAlign","cursor","console","log","toLocaleString","marginY","maxHeight","height","overflow","display","WebkitBoxOrient","WebkitLineClamp","CardActions","width","handleShowDetails","PostGrid","theme","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","Grid","container","minHeight","posts","xs","SettingsMenu","Popper","anchorEl","anchorRef","current","role","undefined","placement","transition","disablePortal","TransitionProps","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","handleClose","MenuList","autoFocusItem","id","aria-labelledby","MenuItem","handleLogout","ListItemIcon","Logout","ListItemText","PostDialog","useState","setTitle","setContent","TextField","margin","label","autoComplete","value","onChange","event","target","multiline","rows","DialogActions","postData","user_id","username","user_img","handleSubmitPost","userContext","createContext","ContextObj","userObject","setUserObject","fetchUserData","location","href","fetch","credentials","headers","res","json","data","useEffect","Provider","children","SearchStack","Root","styled","flex","flexDirection","isMedScreen","setSubmitDialogOpen","authorizationBadges","Appbar","AppBar","position","flexShrink","Toolbar","IconButton","edge","aria-label","sx","mr","setDrawerOpen","flexGrow","userData","setMenuOpen","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","alt","src","ref","Dashboard","context","useContext","history","useHistory","useRef","submitDialogOpen","detailsDialogOpen","setDetailsDialogOpen","menuOpen","drawerOpen","detailPost","setDetailPost","setPosts","fetchPost","method","body","JSON","stringify","text","push","SubmitPostDialog","Drawer","anchor","NotFoundPage","App","createTheme","className","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Context","document","getElementById"],"mappings":"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","file":"static/js/main.c4788e0c.chunk.js","sourcesContent":["import { Button, Container, Stack } from '@mui/material';\nimport React from 'react';\n\ninterface Props {\n\n}\n\nconst LandingPage: React.FC<Props> = (props) => {\n\n    const handleLogin = async () => {\n        window.open(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, \"_self\");\n    }\n\n    return (\n        <div>\n            <h1>Landing Page</h1>\n            <Container maxWidth=\"sm\">\n                <Stack direction=\"column\" alignItems=\"center\">\n                    <Button variant=\"contained\" onClick={()=>{handleLogin();}}>\n                        Login with Google\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import { Button, Dialog, DialogContentText, DialogContent, DialogTitle, Stack } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react'\nimport { Post } from '../types/maintypes';\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    post: Post | null,\n    currentDate: Date\n};\n\nconst PostDetailsDialog: React.FC<Props> = (props) => {\n\n    let dateString: string | null = null;\n    if (props.post) {\n        let date = new Date(props.post.ts);\n        dateString = (date.getDate() === props.currentDate.getDate()) ? `today at ${date.toLocaleTimeString()}` : `on ${date.toLocaleDateString()}`;\n    }\n    \n\n    return ((props.post) ?\n        <Dialog fullWidth open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>{props.post.title}</DialogTitle>\n            <DialogContent style={{color: \"#000000\", paddingLeft: \"20px\", paddingRight: \"20px\", paddingBottom: \"0px\", paddingTop: \"0px\"}}>\n                <div>Posted by {props.post.user_name}</div>\n                <div>Posted {dateString}</div>\n                {(props.post.tags.length > 0) ? <div>\n                    Tags: <Stack direction=\"row\" paddingTop=\"5px\" spacing={1}>\n                    {props.post.tags.map((item, index)=><Button key={index} size=\"small\" variant=\"outlined\">\n                        {item}\n                    </Button>)}\n                    </Stack>\n                </div> : null}\n            </DialogContent>\n            <DialogContentText padding=\"20px\" style={{color: \"#000000\"}}>\n                \"{props.post.content}\"\n            </DialogContentText>\n        </Dialog> : null\n    )\n}\n\nexport default PostDetailsDialog;\n","import { Card, Typography, Stack, Button, CardActions } from '@mui/material'\nimport React from 'react'\nimport { Post } from '../types/maintypes';\n\ninterface Props {\n    post: Post,\n    handleShowDetails: (post: Post) => void,\n    currentDate: Date\n};\n\nconst PostCard: React.FC<Props> = (props) => {\n\n    const date = new Date(props.post.ts);\n    const dateString = (date.getDate() === props.currentDate.getDate()) ? `${date.toLocaleTimeString()} Today` : date.toLocaleDateString();\n\n    return (\n        <Card>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" marginX=\"20px\">\n                <Typography variant=\"h4\" marginTop=\"10px\">{props.post.title}</Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    {props.post.tags.map((item: string, index: number)=><Button key={index} variant=\"outlined\" size=\"small\">\n                        {item}\n                    </Button>)}\n                </Stack>\n            </Stack>\n            <Typography variant=\"body2\" marginLeft=\"20px\" textAlign=\"left\">\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(props.post.user_name)}>{props.post.user_name}: </span>\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(date.toLocaleString())}>{dateString}</span>\n            </Typography>\n            <Typography \n            marginX=\"20px\" marginY=\"10px\" \n            textAlign=\"left\" \n            style={{\n                maxHeight: \"100px\",\n                height: \"100px\",\n                overflow: \"hidden\",\n                display: \"-webkit-box\",\n                WebkitBoxOrient: \"vertical\",\n                WebkitLineClamp: 4\n            }}>\n                {props.post.content}\n            </Typography>\n            <CardActions>\n                <Stack width=\"100%\" direction=\"row\" justifyContent=\"end\" alignItems=\"center\">\n                    <Button onClick={()=>{\n                        props.handleShowDetails(props.post);\n                    }}>\n                        Details\n                    </Button>\n                </Stack>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default PostCard\n","import { Grid, useMediaQuery, useTheme } from '@mui/material';\nimport React from 'react'\nimport { Post } from '../types/maintypes';\nimport PostCard from './PostCard';\n\ninterface Props {\n    currentDate: Date,\n    handleShowDetails: (post: Post) => void,\n    posts: Array<Post>\n};\n\nconst PostGrid: React.FC<Props> = (props) => {\n    \n    const theme = useTheme();\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid container padding={2} spacing={4} minHeight=\"min-content\">\n            {props.posts.map((item: Post, index: number)=><Grid item xs={isSmallScreen ? 12 : 6} key={index}>\n                <PostCard post={item} handleShowDetails={props.handleShowDetails} currentDate={props.currentDate}/>\n            </Grid>)}\n        </Grid>\n    )\n}\n\nexport default PostGrid\n","import { Logout } from '@mui/icons-material'\nimport { ClickAwayListener, Grow, ListItemIcon, ListItemText, MenuItem, MenuList, Paper, Popper } from '@mui/material'\nimport React from 'react'\n\ninterface Props {\n    open: boolean,\n    anchorRef: React.MutableRefObject<null>,\n    handleClose: ()=>void,\n    handleLogout: ()=>void\n};\n\nconst SettingsMenu: React.FC<Props> = (props) => {\n    return (\n        <Popper\n          open={props.open}\n          anchorEl={props.anchorRef.current}\n          role={undefined}\n          placement=\"bottom-start\"\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === 'bottom-start' ? 'left top' : 'left bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={props.handleClose}>\n                  <MenuList\n                    autoFocusItem={props.open}\n                    id=\"composition-menu\"\n                    aria-labelledby=\"composition-button\"\n                  >\n                    <MenuItem onClick={props.handleLogout}>\n                        <ListItemIcon>\n                            <Logout/>\n                        </ListItemIcon>\n                        <ListItemText>Logout</ListItemText>\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n    )\n}\n\nexport default SettingsMenu\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    handleSubmitPost: (post: object) => void,\n    username: string\n}\n\n\nconst PostDialog: React.FC<Props> = (props) => {\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [content, setContent] = useState<string>(\"\");\n\n\n    return (\n        <Dialog open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>Submit a Post</DialogTitle>\n            <DialogContent>\n                <TextField \n                fullWidth \n                margin=\"normal\" \n                id=\"title\" \n                label=\"Title\" \n                variant=\"outlined\" \n                autoComplete=\"off\"\n                value={title}\n                onChange={(event) => {setTitle(event.target.value);}}\n                />\n                <TextField \n                fullWidth \n                margin=\"dense\" \n                id=\"content\" \n                label=\"Content\" \n                variant=\"outlined\" \n                multiline\n                rows={4}\n                autoComplete=\"off\"\n                value={content}\n                onChange={(event) => {setContent(event.target.value);}}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={async ()=>{\n                    props.setDialogOpen(false);\n                    const postData = {\n                        user_id: 1,\n                        user_name: props.username,\n                        user_img: \"https://cdn.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\",\n                        title: title,\n                        content: content,\n                        tags: []\n                    };\n                    console.log(postData);\n                    await props.handleSubmitPost(postData);\n                    setTitle(\"\");\n                    setContent(\"\");\n                }}>\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default PostDialog\n","import { useEffect, useState, createContext, SetStateAction, Dispatch, Context } from 'react';\nimport { User } from './types/maintypes';\n\n\n\ninterface UserContextInterface {\n    userObject: User | null,\n    setUserObject: Dispatch<SetStateAction<User | null>>\n};\n\nexport const userContext = createContext(null) as Context<UserContextInterface | null>;\nconst ContextObj = (props: any) => {\n\n    const [userObject, setUserObject] = useState<User | null>(null);\n\n    const fetchUserData = async () => {\n        console.log(window.location.href)\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/getuser`, {\n            credentials: \"include\",\n            headers: {\n                'Access-Control-Allow-Origin': window.location.href\n            }\n        });\n        try {\n            const data = await res.json();\n            console.log(data);\n            setUserObject(data);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchUserData();\n    }, [])\n    return (\n        <userContext.Provider value={{userObject, setUserObject}}>{props.children}</userContext.Provider>\n    )\n}\n\nexport default ContextObj\n","import { Button, Paper, Stack, styled, TextField } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react'\n\n\ninterface Props {\n    isMedScreen: boolean,\n    setSubmitDialogOpen: Dispatch<SetStateAction<boolean>>\n}\n\nconst SearchStack: React.FC<Props> = (props) => {\n\n    const Root = styled(Paper)(() => ({\n        flex: 1,\n        paddingTop: 30,\n        flexDirection: \"column\",\n        justifyContent: \"start\",\n        alignItems: \"center\",\n        display: (props.isMedScreen) ? \"none\" : \"flex\"\n      }));\n\n    return (\n        <Root>\n            <Stack direction=\"column\" justifyContent=\"start\" alignItems=\"center\" spacing={4} height=\"100%\">\n                <Button variant=\"contained\" onClick={()=>props.setSubmitDialogOpen(true)}>\n                    Post\n                </Button>\n                <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\" />\n            </Stack>\n        </Root>\n    )\n}\n\nexport default SearchStack\n","import { AppBar, Avatar, Badge, IconButton, Stack, Toolbar, Typography } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport {User} from \"../types/maintypes\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ShieldIcon from '@mui/icons-material/Shield';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\n\nconst authorizationBadges = [\n    null,\n    <CheckCircleIcon/>,\n    <ShieldIcon/>\n];\n\n\ninterface Props {\n    userData: User | null | undefined,\n    isMedScreen: boolean,\n    setDrawerOpen: Dispatch<SetStateAction<boolean>>,\n    setMenuOpen: Dispatch<SetStateAction<boolean>>,\n    anchorRef: React.MutableRefObject<null>\n};\n\nconst Appbar: React.FC<Props> = (props) => {\n    return (\n        <AppBar position=\"static\" style={{flexShrink: 0}}>\n            <Toolbar>\n            {(props.isMedScreen) ? <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n                onClick={()=>{props.setDrawerOpen(true);}}\n            >\n                <MenuIcon />\n            </IconButton> : null}\n            <Typography variant=\"h5\" flexGrow={1} textAlign=\"start\">Dashboard</Typography>\n            {(props.userData) ? <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                <Typography>{props.userData.user_name}</Typography>\n                <IconButton onClick={()=>{props.setMenuOpen(true);}}>\n                    <Badge\n                        overlap=\"circular\"\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                        badgeContent={\n                            authorizationBadges[2]\n                        }\n                    >\n                        <Avatar alt={props.userData.user_name} src={props.userData.user_img} ref={props.anchorRef}/>\n                    </Badge>\n                </IconButton>\n            </Stack> \n            : <Typography>\n                You are not logged in\n            </Typography>}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Appbar\n","import { Drawer, useMediaQuery, useTheme } from '@mui/material'\nimport React, { useState, useEffect, useRef, useContext, Fragment } from 'react'\nimport { useHistory } from 'react-router';\nimport PostDetailsDialog from '../components/PostDetailsDialog';\nimport PostGrid from '../components/PostGrid';\nimport SettingsMenu from '../components/SettingsMenu';\nimport SubmitPostDialog from \"../components/SubmitPostDialog\";\nimport { userContext } from '../Context';\nimport { Post, User } from '../types/maintypes';\nimport SearchStack from '../components/SearchStack';\nimport Appbar from '../components/Appbar';\n\ninterface Props {\n    userData: User | null\n}\n\nconst Dashboard: React.FC<Props> = (props) => {\n\n    const context = useContext(userContext);\n\n    const theme = useTheme();\n    const isMedScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    let history = useHistory();\n\n    const anchorRef = useRef(null);\n\n    const [submitDialogOpen, setSubmitDialogOpen] = useState<boolean>(false);\n    const [detailsDialogOpen, setDetailsDialogOpen] = useState<boolean>(false);\n    const [menuOpen, setMenuOpen] = useState<boolean>(false);\n    const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const [detailPost, setDetailPost] = useState<Post | null>(null);\n    const [posts, setPosts] = useState<Array<Post>>([]);\n\n    const currentDate = new Date();\n\n    const fetchPost = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts/`);\n        const data = await res.json();\n\n        console.log(data);\n        setPosts(data);\n    }\n    useEffect( () => {\n        fetchPost();\n    }, [])\n\n    const handleSubmitPost = async (post: object) => {\n        await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts`, {\n            method: \"POST\",\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(post)\n        });\n        await fetchPost();\n    };\n\n    const handleShowDetails = (post: Post) => {\n        setDetailPost(post);\n        setDetailsDialogOpen(true);\n    };\n\n    const handleLogout = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/logout`, {\n            credentials: 'include',\n            headers: {\n                'Access-Control-Allow-Origin': window.location.href\n            }\n        });\n        console.log(res);\n        const text = await res.text();\n        if (text === \"done\") {\n            context?.setUserObject(null);\n            history.push(\"/\");\n        }\n    };\n\n    return (\n        <Fragment>\n            <Appbar userData={context?.userObject} isMedScreen={isMedScreen} setDrawerOpen={setDrawerOpen} setMenuOpen={setMenuOpen} anchorRef={anchorRef}/>\n            <div style={{display: \"flex\", flexDirection: \"row\", height: \"100%\", flex: 1, overflow: \"auto\"}}>\n                <SearchStack isMedScreen={isMedScreen} setSubmitDialogOpen={setSubmitDialogOpen}/>\n                <div style={{flex: 3, display: \"flex\", flexDirection: \"column\", overflow: \"auto\", height: \"100%\"}}>\n                    <PostGrid posts={posts} handleShowDetails={handleShowDetails} currentDate={currentDate}/>\n                </div>\n            </div>\n            <SubmitPostDialog open={submitDialogOpen} setDialogOpen={setSubmitDialogOpen} handleSubmitPost={handleSubmitPost} username={(props.userData) ? props.userData.user_name : \"\"}/>\n            <PostDetailsDialog open={detailsDialogOpen} setDialogOpen={setDetailsDialogOpen} post={detailPost} currentDate={currentDate}/>\n            <SettingsMenu open={menuOpen} anchorRef={anchorRef} handleClose={()=>{setMenuOpen(false);}} handleLogout={handleLogout}/>\n            <Drawer anchor=\"left\" open={drawerOpen && isMedScreen} onClose={()=>{setDrawerOpen(false);}}>\n                <SearchStack isMedScreen={!isMedScreen} setSubmitDialogOpen={setSubmitDialogOpen}/>\n            </Drawer>\n        </Fragment>\n    );\n}\n\nexport default Dashboard;","import React from 'react'\n\nconst NotFoundPage: React.FC = () => {\n    return (\n        <div>\n            <h1>404 no.</h1>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import { useContext } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from './pages/LandingPage';\nimport Dashboard from './pages/Dashboard';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material';\nimport { userContext } from './Context';\n\nfunction App() {\n  const theme = createTheme();\n\n  const context = useContext(userContext);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={()=>{return (context && context.userObject) ? <Redirect to=\"/dashboard\"/> : <LandingPage/>}}/>\n            <Route exact path=\"/dashboard\" component={()=><Dashboard userData={context?.userObject || null}/>}/>\n            <Route exact path=\"/404\" component={()=><NotFoundPage/>}/>\n            {/*<Redirect to=\"/404\"/>*/}\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Context from \"./Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context>\n      <App />\n    </Context>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}