{"version":3,"sources":["pages/LandingPage.tsx","components/PostCard.tsx","components/PostDetailsDialog.tsx","components/SubmitPostDialog.tsx","pages/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LandingPage","props","history","useHistory","useState","username","setUsername","console","log","process","Container","maxWidth","Stack","direction","Typography","TextField","id","label","variant","value","onChange","event","target","autoComplete","Button","onClick","push","PostCard","date","Date","post","ts","dateString","getDate","currentDate","toLocaleTimeString","toLocaleDateString","Card","alignItems","justifyContent","marginX","marginTop","title","spacing","tags","map","item","index","size","marginLeft","textAlign","style","cursor","user_name","toLocaleString","marginY","maxHeight","height","overflow","display","WebkitBoxOrient","WebkitLineClamp","content","CardActions","width","handleShowDetails","PostDetailsDialog","Dialog","fullWidth","open","onClose","setDialogOpen","DialogTitle","DialogContent","color","paddingLeft","paddingRight","paddingBottom","length","paddingTop","DialogContentText","padding","PostDialog","setTitle","setContent","margin","multiline","rows","DialogActions","a","postData","user_id","user_img","handleSubmitPost","fillerPost","post_id","Dashboard","submitDialogOpen","setSubmitDialogOpen","detailsDialogOpen","setDetailsDialogOpen","detailPost","setDetailPost","posts","setPosts","fetchPost","fetch","res","json","data","useEffect","method","headers","body","JSON","stringify","AppBar","position","Toolbar","Grid","container","xs","SubmitPostDialog","App","theme","createTheme","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76ffb349.chunk.js","sourcesContent":["import { Button, Container, Stack, TextField, Typography } from '@mui/material';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\nimport { useHistory } from 'react-router';\n\ninterface Props {\n    setUsername: Dispatch<SetStateAction<string>>;\n}\n\nconst LandingPage: React.FC<Props> = (props) => {\n    const history = useHistory();\n\n    const [username, setUsername] = useState<string>(\"\");\n\n    console.log(process.env);\n\n    return (\n        <div>\n            <h1>Landing Page</h1>\n            <Container maxWidth=\"sm\">\n                <Stack direction=\"column\">\n                    <Typography>Please enter your Username</Typography>\n                    <br/>\n                    <TextField \n                    id=\"email\" \n                    label=\"Username\" \n                    variant=\"outlined\" \n                    value={username}\n                    onChange={(event) => {setUsername(event.target.value);}}\n                    autoComplete=\"off\"\n                    />\n                    <br/>\n                    <Button variant=\"contained\" onClick={()=>{\n                        history.push(\"/dashboard\");\n                        props.setUsername(username);\n                    }}>\n                        Dashboard\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import { Card, Typography, Stack, Button, CardActions } from '@mui/material'\nimport React from 'react'\n\ninterface Post {\n    post_id: number,\n    user_id: number,\n    user_name: string,\n    user_img: string,\n    title: string,\n    content: string,\n    tags: Array<string>,\n    ts: string\n};\n\ninterface Props {\n    post: Post,\n    handleShowDetails: (post: Post) => void,\n    currentDate: Date\n};\n\nconst PostCard: React.FC<Props> = (props) => {\n\n    const date = new Date(props.post.ts);\n    const dateString = (date.getDate() === props.currentDate.getDate()) ? `${date.toLocaleTimeString()} Today` : date.toLocaleDateString();\n\n    return (\n        <Card>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" marginX=\"20px\">\n                <Typography variant=\"h4\" marginTop=\"10px\">{props.post.title}</Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    {props.post.tags.map((item: string, index: number)=><Button key={index} variant=\"outlined\" size=\"small\">\n                        {item}\n                    </Button>)}\n                </Stack>\n            </Stack>\n            <Typography variant=\"body2\" marginLeft=\"20px\" textAlign=\"left\">\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(props.post.user_name)}>{props.post.user_name}: </span>\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(date.toLocaleString())}>{dateString}</span>\n            </Typography>\n            <Typography \n            marginX=\"20px\" marginY=\"10px\" \n            textAlign=\"left\" \n            style={{\n                maxHeight: \"100px\",\n                height: \"100px\",\n                overflow: \"hidden\",\n                display: \"-webkit-box\",\n                WebkitBoxOrient: \"vertical\",\n                WebkitLineClamp: 4\n            }}>\n                {props.post.content}\n            </Typography>\n            <CardActions>\n                <Stack width=\"100%\" direction=\"row\" justifyContent=\"end\" alignItems=\"center\">\n                    <Button onClick={()=>{\n                        props.handleShowDetails(props.post);\n                    }}>\n                        Details\n                    </Button>\n                </Stack>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default PostCard\n","import { Button, Dialog, DialogContentText, DialogContent, DialogTitle, Stack } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react'\n\ninterface Post {\n    post_id: number,\n    user_id: number,\n    user_name: string,\n    user_img: string,\n    title: string,\n    content: string,\n    tags: Array<string>,\n    ts: string\n};\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    post: Post,\n    currentDate: Date\n};\n\nconst PostDetailsDialog: React.FC<Props> = (props) => {\n\n    let date = new Date(props.post.ts);\n    const dateString = (date.getDate() === props.currentDate.getDate()) ? `today at ${date.toLocaleTimeString()}` : `on ${date.toLocaleDateString()}`;\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>{props.post.title}</DialogTitle>\n            <DialogContent style={{color: \"#000000\", paddingLeft: \"20px\", paddingRight: \"20px\", paddingBottom: \"0px\"}}>\n                <div>Posted by {props.post.user_name}</div>\n                <div>Posted {dateString}</div>\n                {(props.post.tags.length > 0) ? <div>\n                    Tags: <Stack direction=\"row\" paddingTop=\"5px\" spacing={1}>\n                    {props.post.tags.map((item, index)=><Button key={index} size=\"small\" variant=\"outlined\">\n                        {item}\n                    </Button>)}\n                    </Stack>\n                </div> : null}\n            </DialogContent>\n            <DialogContentText padding=\"20px\" style={{color: \"#000000\"}}>\n                \"{props.post.content}\"\n            </DialogContentText>\n        </Dialog>\n    )\n}\n\nexport default PostDetailsDialog;\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    handleSubmitPost: (post: object) => void,\n    username: string\n}\n\n// https://cdn.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\n\n\nconst PostDialog: React.FC<Props> = (props) => {\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [content, setContent] = useState<string>(\"\");\n\n\n    return (\n        <Dialog open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>Submit a Post</DialogTitle>\n            <DialogContent>\n                <TextField \n                fullWidth \n                margin=\"normal\" \n                id=\"title\" \n                label=\"Title\" \n                variant=\"outlined\" \n                autoComplete=\"off\"\n                value={title}\n                onChange={(event) => {setTitle(event.target.value);}}\n                />\n                <TextField \n                fullWidth \n                margin=\"dense\" \n                id=\"content\" \n                label=\"Content\" \n                variant=\"outlined\" \n                multiline\n                rows={4}\n                autoComplete=\"off\"\n                value={content}\n                onChange={(event) => {setContent(event.target.value);}}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={async ()=>{\n                    props.setDialogOpen(false);\n                    const postData = {\n                        user_id: 1,\n                        user_name: props.username,\n                        user_img: \"https://cdn.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\",\n                        title: title,\n                        content: content,\n                        tags: []\n                    };\n                    console.log(postData);\n                    await props.handleSubmitPost(postData);\n                }}>\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default PostDialog\n","import { AppBar, Button, Grid, Stack, TextField, Toolbar, Typography } from '@mui/material'\nimport React, { useState, useEffect } from 'react'\nimport PostCard from '../components/PostCard';\nimport PostDetailsDialog from '../components/PostDetailsDialog';\nimport SubmitPostDialog from \"../components/SubmitPostDialog\";\n\n\ninterface Post {\n    post_id: number,\n    user_id: number,\n    user_name: string,\n    user_img: string,\n    title: string,\n    content: string,\n    tags: Array<string>,\n    ts: string\n};\n\nconst fillerPost: Post = {\n    post_id: -1,\n    user_id: -1,\n    user_name: \"\",\n    user_img: \"\",\n    title: \"\",\n    content: \"\",\n    tags: [],\n    ts: \"\"\n}\n\n\ninterface Props {\n    username: string\n}\n\nconst Dashboard: React.FC<Props> = (props) => {\n\n    const [submitDialogOpen, setSubmitDialogOpen] = useState<boolean>(false);\n    const [detailsDialogOpen, setDetailsDialogOpen] = useState<boolean>(false);\n    const [detailPost, setDetailPost] = useState<Post>(fillerPost);\n    const [posts, setPosts] = useState<Array<Post>>([]);\n\n    const currentDate = new Date();\n\n    const fetchPost = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts/`);\n        const data = await res.json();\n\n        console.log(data);\n        setPosts(data);\n    }\n    useEffect( () => {\n        fetchPost();\n    }, [])\n\n    const handleSubmitPost = async (post: object) => {\n        await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts`, {\n            method: \"POST\",\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(post)\n        });\n        await fetchPost();\n    };\n\n    const handleShowDetails = (post: Post) => {\n        setDetailPost(post);\n        setDetailsDialogOpen(true);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h5\">{props.username}'s Dashboard</Typography>\n                </Toolbar>\n            </AppBar>\n            <Stack margin=\"10px\" direction=\"row\" justifyContent=\"space-around\" alignItems=\"center\">\n                <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\" />\n                <Button variant=\"contained\" onClick={()=>setSubmitDialogOpen(true)}>\n                    Post\n                </Button>\n            </Stack>\n            <Grid container spacing={4} padding=\"20px\">\n                {posts.map((item: Post, index: number)=><Grid item xs={6} key={index}>\n                    <PostCard post={item} handleShowDetails={handleShowDetails} currentDate={currentDate}/>\n                </Grid>)}\n            </Grid>\n            <SubmitPostDialog open={submitDialogOpen} setDialogOpen={setSubmitDialogOpen} handleSubmitPost={handleSubmitPost} username={props.username}/>\n            <PostDetailsDialog open={detailsDialogOpen} setDialogOpen={setDetailsDialogOpen} post={detailPost} currentDate={currentDate}/>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React, { useState } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LandingPage from './pages/LandingPage';\nimport Dashboard from './pages/Dashboard';\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material';\n\nfunction App() {\n  const theme = createTheme()\n\n  const [username, setUsername] = useState(\"\");\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={()=><LandingPage setUsername={setUsername}/>}/>\n            <Route path=\"/dashboard\" component={()=><Dashboard username={username}/>}/>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}