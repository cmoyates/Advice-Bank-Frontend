{"version":3,"sources":["pages/LandingPage.tsx","components/PostDetailsDialog.tsx","components/PostCard.tsx","components/PostGrid.tsx","components/SettingsMenu.tsx","components/TagInput.tsx","components/SubmitPostDialog.tsx","Context.tsx","components/DateRangePicker.tsx","components/SearchStack.tsx","components/Appbar.tsx","pages/Dashboard.tsx","pages/NotFoundPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LandingPage","props","history","useHistory","handleLogin","a","window","open","process","className","Container","Stack","height","alignItems","justifyContent","Typography","variant","padding","color","Button","size","style","borderColor","marginLeft","onClick","startIcon","push","PostDetailsDialog","dateString","post","date","Date","ts","getDate","currentDate","toLocaleTimeString","toLocaleDateString","Dialog","fullWidth","onClose","setDialogOpen","DialogTitle","title","DialogContent","paddingLeft","paddingRight","paddingBottom","paddingTop","user_name","tags","length","direction","spacing","map","item","index","DialogContentText","content","PostCard","Card","marginX","marginTop","addTag","textAlign","cursor","console","log","toLocaleString","marginY","maxHeight","overflow","display","WebkitBoxOrient","WebkitLineClamp","CardActions","width","handleShowDetails","PostGrid","theme","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","Grid","container","minHeight","posts","xs","SettingsMenu","Popper","anchorEl","anchorRef","current","role","undefined","placement","transition","disablePortal","TransitionProps","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","handleClose","MenuList","autoFocusItem","id","aria-labelledby","MenuItem","handleLogout","ListItemIcon","Logout","ListItemText","userPrivilege","Bookmarks","People","TagInput","useState","tagInputValue","setTagInputValue","error","setError","maxWidth","minWidth","TextField","label","autoComplete","value","Boolean","helperText","onBlur","onChange","e","target","onKeyDown","key","tagString","keyCode","has","setTags","add","Array","from","Chip","onDelete","delete","Set","PostDialog","setTitle","setContent","event","multiline","rows","DialogActions","tagArray","postData","user_id","username","user_img","handleSubmitPost","userContext","createContext","ContextObj","userObject","setUserObject","fetchUserData","location","href","fetch","credentials","headers","res","json","data","useEffect","Provider","children","DateRangePicker","setDate","now","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","shouldDisableDate","day","getTime","newValue","setHours","renderInput","params","SearchStack","Root","styled","flex","flexDirection","isMedScreen","paddingX","isLoggedIn","setSubmitDialogOpen","Appbar","AppBar","position","flexShrink","Toolbar","IconButton","edge","aria-label","sx","mr","setDrawerOpen","flexGrow","userData","setMenuOpen","Avatar","alt","src","ref","Dashboard","context","useContext","useRef","submitDialogOpen","detailsDialogOpen","setDetailsDialogOpen","menuOpen","drawerOpen","detailPost","setDetailPost","searchTags","setSearchTags","setPosts","fetchPost","document","method","body","JSON","stringify","text","user_privilege","SubmitPostDialog","Drawer","anchor","NotFoundPage","App","createTheme","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Context","getElementById"],"mappings":"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","file":"static/js/main.c15c712a.chunk.js","sourcesContent":["import { Button, Container, Stack, Typography } from '@mui/material';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport GoogleIcon from '@mui/icons-material/Google';\n\ninterface Props {\n\n}\n\nconst LandingPage: React.FC<Props> = (props) => {\n\n    const history = useHistory();\n\n    const handleLogin = async () => {\n        window.open(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, \"_self\");\n    }\n\n    return (\n        <div className=\"bgImage\">\n            <Container>\n                <Stack height=\"100vh\" alignItems=\"start\" justifyContent=\"center\">\n                    <Typography variant=\"h1\" padding={2} color=\"white\"><b>Advice Bank</b></Typography>\n                    <Button size=\"large\" variant=\"outlined\" style={{color: \"white\", borderColor: \"white\", marginLeft: \"16px\"}} onClick={()=>{handleLogin();}} startIcon={<GoogleIcon />}>\n                        Login with Google\n                    </Button>\n                    <Button size=\"medium\" style={{color: \"white\", marginLeft: \"10px\"}} onClick={()=>{history.push(\"/dashboard\");}}>\n                        Continue without logging in\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n}\n\nexport default LandingPage","import { Button, Dialog, DialogContentText, DialogContent, DialogTitle, Stack } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react'\nimport { Post } from '../types/maintypes';\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    post: Post | null,\n    currentDate: Date\n};\n\nconst PostDetailsDialog: React.FC<Props> = (props) => {\n\n    let dateString: string | null = null;\n    if (props.post) {\n        let date = new Date(props.post.ts);\n        dateString = (date.getDate() === props.currentDate.getDate()) ? `today at ${date.toLocaleTimeString()}` : `on ${date.toLocaleDateString()}`;\n    }\n    \n\n    return ((props.post) ?\n        <Dialog fullWidth open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>{props.post.title}</DialogTitle>\n            <DialogContent style={{color: \"#000000\", paddingLeft: \"20px\", paddingRight: \"20px\", paddingBottom: \"0px\", paddingTop: \"0px\"}}>\n                <div>Posted by {props.post.user_name}</div>\n                <div>Posted {dateString}</div>\n                {(props.post.tags.length > 0) ? <div>\n                    Tags: <Stack direction=\"row\" paddingTop=\"5px\" spacing={1}>\n                    {props.post.tags.map((item, index)=><Button key={index} size=\"small\" variant=\"outlined\">\n                        {item}\n                    </Button>)}\n                    </Stack>\n                </div> : null}\n            </DialogContent>\n            <DialogContentText padding=\"20px\" style={{color: \"#000000\"}}>\n                \"{props.post.content}\"\n            </DialogContentText>\n        </Dialog> : null\n    )\n}\n\nexport default PostDetailsDialog;\n","import { Card, Typography, Stack, Button, CardActions } from '@mui/material'\nimport React from 'react'\nimport { Post } from '../types/maintypes';\n\ninterface Props {\n    post: Post,\n    handleShowDetails: (post: Post) => void,\n    currentDate: Date,\n    addTag: (tagString: string) => void\n};\n\nconst PostCard: React.FC<Props> = (props) => {\n\n    const date = new Date(props.post.ts);\n    const dateString = (date.getDate() === props.currentDate.getDate()) ? `${date.toLocaleTimeString()} Today` : date.toLocaleDateString();\n\n    return (\n        <Card>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" marginX=\"20px\">\n                <Typography variant=\"h4\" marginTop=\"10px\">{props.post.title}</Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    {props.post.tags.map((item: string, index: number)=>\n                    <Button key={index} variant=\"outlined\" size=\"small\" onClick={()=>{props.addTag(item);}}>\n                        {item}\n                    </Button>)}\n                </Stack>\n            </Stack>\n            <Typography variant=\"body2\" marginLeft=\"20px\" textAlign=\"left\">\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(props.post.user_name)}>{props.post.user_name}: </span>\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(date.toLocaleString())}>{dateString}</span>\n            </Typography>\n            <Typography \n            marginX=\"20px\" marginY=\"10px\" \n            textAlign=\"left\" \n            style={{\n                maxHeight: \"100px\",\n                height: \"100px\",\n                overflow: \"hidden\",\n                display: \"-webkit-box\",\n                WebkitBoxOrient: \"vertical\",\n                WebkitLineClamp: 4\n            }}>\n                {props.post.content}\n            </Typography>\n            <CardActions>\n                <Stack width=\"100%\" direction=\"row\" justifyContent=\"end\" alignItems=\"center\">\n                    <Button onClick={()=>{\n                        props.handleShowDetails(props.post);\n                    }}>\n                        Details\n                    </Button>\n                </Stack>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default PostCard\n","import { Grid, useMediaQuery, useTheme } from '@mui/material';\nimport React from 'react'\nimport { Post } from '../types/maintypes';\nimport PostCard from './PostCard';\n\ninterface Props {\n    currentDate: Date,\n    handleShowDetails: (post: Post) => void,\n    posts: Array<Post>,\n    addTag: (tagString: string) => void\n};\n\nconst PostGrid: React.FC<Props> = (props) => {\n    \n    const theme = useTheme();\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid container padding={2} spacing={4} minHeight=\"min-content\">\n            {props.posts.map((item: Post, index: number)=><Grid item xs={isSmallScreen ? 12 : 6} key={index}>\n                <PostCard post={item} handleShowDetails={props.handleShowDetails} currentDate={props.currentDate} addTag={props.addTag}/>\n            </Grid>)}\n        </Grid>\n    )\n}\n\nexport default PostGrid\n","import { Logout, Bookmarks, People } from '@mui/icons-material'\nimport { ClickAwayListener, Grow, ListItemIcon, ListItemText, MenuItem, MenuList, Paper, Popper } from '@mui/material'\nimport React from 'react'\n\ninterface Props {\n    open: boolean,\n    anchorRef: React.MutableRefObject<null>,\n    userPrivilege: number | undefined,\n    handleClose: ()=>void,\n    handleLogout: ()=>void\n};\n\nconst SettingsMenu: React.FC<Props> = (props) => {\n    return (\n        <Popper\n          open={props.open}\n          anchorEl={props.anchorRef.current}\n          role={undefined}\n          placement=\"bottom-start\"\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === 'bottom-start' ? 'left top' : 'left bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={props.handleClose}>\n                  <MenuList\n                    autoFocusItem={props.open}\n                    id=\"composition-menu\"\n                    aria-labelledby=\"composition-button\"\n                  >\n                    <MenuItem onClick={props.handleLogout}>\n                        <ListItemIcon>\n                            <Logout/>\n                        </ListItemIcon>\n                        <ListItemText>Logout</ListItemText>\n                    </MenuItem>\n                    {(props.userPrivilege !== undefined) ? <div>\n                        <MenuItem onClick={()=>{console.log(\"Saved\")}}>\n                            <ListItemIcon>\n                                <Bookmarks/>\n                            </ListItemIcon>\n                            <ListItemText>Saved</ListItemText>\n                        </MenuItem>\n                        {(props.userPrivilege > 1) ? \n                        <MenuItem onClick={()=>{console.log(\"Manage Users\")}}>\n                            <ListItemIcon>\n                                <People/>\n                            </ListItemIcon>\n                            <ListItemText>Users</ListItemText>\n                        </MenuItem> : null}\n                    </div> : null}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n    )\n}\n\nexport default SettingsMenu\n","import { Chip, Grid, TextField } from '@mui/material'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\n\ninterface Props {\n    tags: Set<string>,\n    setTags: Dispatch<SetStateAction<Set<string>>>\n    fullWidth?: boolean | undefined\n};\n\nconst TagInput: React.FC<Props> = (props) => {\n\n    const [tagInputValue, setTagInputValue] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const handleAddTag = (tagString: string) => {\n        props.setTags(props.tags.add(tagString));\n    }\n\n    const handleDeleteTag = (tagString: string) => {\n        props.tags.delete(tagString);\n        props.setTags(new Set<string>(props.tags));\n    };\n\n    const keyPress = (key: React.KeyboardEvent) => {\n        if (key.keyCode === 13) {\n            if (tagInputValue.length === 0) {\n                setError(\"Tags cannot be blank\");\n            }\n            else if (props.tags.has(tagInputValue)) {\n                setError(\"That tag has already been entered\");\n            }\n            else {\n                handleAddTag(tagInputValue);\n                setTagInputValue(\"\");\n            }\n        }\n    }\n\n    return (\n        <div style={{maxWidth: \"100%\", minWidth: \"100%\"}}>\n            <TextField\n            id=\"outlined-basic\" \n            label=\"Tags\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth={props.fullWidth}\n            value={tagInputValue}\n            error={Boolean(error)}\n            helperText={error}\n            onBlur={()=>{setError(\"\");}}\n            onChange={(e)=>{\n                setTagInputValue(e.target.value);\n                setError(\"\");\n            }}\n            onKeyDown={keyPress}\n            />\n            <Grid container spacing={1} paddingTop={1} maxWidth=\"100%\">\n                {Array.from(props.tags).map((item, index)=>(\n                    <Grid item key={index}>\n                        <Chip \n                        label={item}\n                        onDelete={()=>{handleDeleteTag(item);}}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n}\n\nexport default TagInput\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from '@mui/material'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\nimport TagInput from './TagInput';\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    handleSubmitPost: (post: object) => void,\n    username: string\n}\n\n\nconst PostDialog: React.FC<Props> = (props) => {\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [content, setContent] = useState<string>(\"\");\n    const [tags, setTags] = useState<Set<string>>(new Set<string>());\n\n    return (\n        <Dialog open={props.open} onClose={()=>props.setDialogOpen(false)} fullWidth>\n            <DialogTitle>Submit a Post</DialogTitle>\n            <DialogContent>\n                <Stack spacing={2} paddingTop={1}>\n                    <TextField \n                    fullWidth \n                    id=\"title\" \n                    label=\"Title\" \n                    variant=\"outlined\" \n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={(event) => {setTitle(event.target.value);}}\n                    />\n                    <TextField \n                    fullWidth \n                    id=\"content\" \n                    label=\"Content\" \n                    variant=\"outlined\" \n                    multiline\n                    rows={4}\n                    autoComplete=\"off\"\n                    value={content}\n                    onChange={(event) => {setContent(event.target.value);}}\n                    />\n                    <TagInput tags={tags} setTags={setTags} fullWidth/>\n                </Stack>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={async ()=>{\n                    props.setDialogOpen(false);\n                    const tagArray = Array.from(tags);\n                    const postData = {\n                        user_id: 1,\n                        user_name: props.username,\n                        user_img: \"https://cdn.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\",\n                        title: title,\n                        content: content,\n                        tags: tagArray\n                    };\n                    console.log(postData);\n                    await props.handleSubmitPost(postData);\n                    setTitle(\"\");\n                    setContent(\"\");\n                    setTags(new Set<string>());\n                }}>\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default PostDialog\n","import { useEffect, useState, createContext, SetStateAction, Dispatch, Context } from 'react';\nimport { User } from './types/maintypes';\n\n\n\ninterface UserContextInterface {\n    userObject: User | null,\n    setUserObject: Dispatch<SetStateAction<User | null>>\n};\n\nexport const userContext = createContext(null) as Context<UserContextInterface | null>;\nconst ContextObj = (props: any) => {\n\n    const [userObject, setUserObject] = useState<User | null>(null);\n\n    const fetchUserData = async () => {\n        console.log(window.location.href)\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/getuser`, {\n            credentials: \"include\",\n            headers: {\n                'Access-Control-Allow-Origin': window.location.href\n            }\n        });\n        try {\n            const data = await res.json();\n            console.log(data);\n            setUserObject(data);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchUserData();\n    }, [])\n    return (\n        <userContext.Provider value={{userObject, setUserObject}}>{props.children}</userContext.Provider>\n    )\n}\n\nexport default ContextObj\n","import React, { useState } from 'react'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { DatePicker } from '@mui/lab';\nimport { Stack, TextField } from '@mui/material';\n\nconst DateRangePicker = () => {\n\n    const [date, setDate] = useState<Array<Date | null>>([null, null]);\n\n    let now = new Date();\n\n    return (\n        <div>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <Stack spacing={1}>\n                    <DatePicker\n                    label=\"From\"\n                    shouldDisableDate={(day) => {\n                        return day !== null && (day.getTime() > now.getTime() || (date[1] !== null && day.getTime() > date[1].getTime()));\n                    }}\n                    value={date[0]}\n                    onChange={(newValue) => {\n                        newValue?.setHours(0, 0, 0, 0);\n                        setDate([newValue, date[1]]);\n                    }}\n                    renderInput={(params) => <TextField {...params} id=\"Date\" autoComplete=\"off\" />}\n                    />\n                    <DatePicker\n                    label=\"To\"\n                    shouldDisableDate={(day) => {\n                        return day !== null && (day.getTime() > now.getTime() || (date[0] !== null && day.getTime() < date[0].getTime()));\n                    }}\n                    value={date[1]}\n                    onChange={(newValue) => {\n                        newValue?.setHours(0, 0, 0, 0);\n                        setDate([date[0], newValue]);\n                    }}\n                    renderInput={(params) => <TextField {...params} id=\"Date\" autoComplete=\"off\" />}\n                    />\n                </Stack>\n            </LocalizationProvider>\n        </div>\n    )\n}\n\nexport default DateRangePicker\n","import { Button, Paper, Stack, styled, TextField } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react'\nimport TagInput from './TagInput';\nimport DateRangePicker from './DateRangePicker'\n\n\ninterface Props {\n    isMedScreen: boolean,\n    setSubmitDialogOpen: Dispatch<SetStateAction<boolean>>,\n    maxWidth?: string | number | undefined,\n    tags: Set<string>\n    setTags: Dispatch<SetStateAction<Set<string>>>,\n    isLoggedIn: boolean\n    userPrivilege: number | undefined\n}\n\nconst SearchStack: React.FC<Props> = (props) => {\n\n    const Root = styled(Paper)(() => ({\n        flex: 1,\n        paddingTop: 30,\n        flexDirection: \"column\",\n        justifyContent: \"start\",\n        alignItems: \"center\",\n        display: (props.isMedScreen) ? \"none\" : \"flex\",\n        maxWidth: \"90vw\"\n    }));\n\n    return (\n        <Root>\n            <Stack direction=\"column\" justifyContent=\"space-around\" alignItems=\"center\" spacing={2} height=\"100%\" paddingX={4} maxWidth={props.maxWidth}>\n                {(props.isLoggedIn && props.userPrivilege !== undefined && props.userPrivilege > 0) ? <Button variant=\"contained\" onClick={()=>props.setSubmitDialogOpen(true)}>\n                    Post\n                </Button> : null}\n                <TextField id=\"outlined-basic\" label=\"Content\" variant=\"outlined\" autoComplete=\"off\" fullWidth/>\n                <TagInput fullWidth tags={props.tags} setTags={props.setTags}/>\n                <TextField id=\"outlined-basic\" label=\"Author\" variant=\"outlined\" autoComplete=\"off\" fullWidth/>\n                <DateRangePicker/>\n                <Button variant=\"contained\">\n                    Search\n                </Button>\n            </Stack>\n        </Root>\n    )\n}\n\nexport default SearchStack\n","import { AppBar, Avatar, IconButton, Stack, Toolbar, Typography } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport {User} from \"../types/maintypes\";\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\ninterface Props {\n    userData: User | null | undefined,\n    isMedScreen: boolean,\n    setDrawerOpen: Dispatch<SetStateAction<boolean>>,\n    setMenuOpen: Dispatch<SetStateAction<boolean>>,\n    anchorRef: React.MutableRefObject<null>\n};\n\nconst Appbar: React.FC<Props> = (props) => {\n    return (\n        <AppBar position=\"static\" style={{flexShrink: 0}}>\n            <Toolbar>\n            {(props.isMedScreen) ? <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n                onClick={()=>{props.setDrawerOpen(true);}}\n            >\n                <MenuIcon />\n            </IconButton> : null}\n            <Typography variant=\"h5\" flexGrow={1} textAlign=\"start\">Dashboard</Typography>\n            {(props.userData) ? <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                <Typography>{props.userData.user_name}</Typography>\n                <IconButton onClick={()=>{props.setMenuOpen(true);}}>\n                    <Avatar alt={props.userData.user_name} src={props.userData.user_img} ref={props.anchorRef}/>\n                </IconButton>\n            </Stack> \n            : <Typography>\n                You are not logged in\n            </Typography>}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Appbar\n","import { Drawer, useMediaQuery, useTheme } from '@mui/material'\nimport React, { useState, useEffect, useRef, useContext, Fragment } from 'react'\nimport { useHistory } from 'react-router';\nimport PostDetailsDialog from '../components/PostDetailsDialog';\nimport PostGrid from '../components/PostGrid';\nimport SettingsMenu from '../components/SettingsMenu';\nimport SubmitPostDialog from \"../components/SubmitPostDialog\";\nimport { userContext } from '../Context';\nimport { Post, User } from '../types/maintypes';\nimport SearchStack from '../components/SearchStack';\nimport Appbar from '../components/Appbar';\n\ninterface Props {\n    userData: User | null\n}\n\nconst Dashboard: React.FC<Props> = (props) => {\n\n    const context = useContext(userContext);\n    const isLoggedIn = Boolean(context && context.userObject)\n\n    const theme = useTheme();\n    const isMedScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    let history = useHistory();\n\n    const anchorRef = useRef(null);\n\n    const [submitDialogOpen, setSubmitDialogOpen] = useState<boolean>(false);\n    const [detailsDialogOpen, setDetailsDialogOpen] = useState<boolean>(false);\n    const [menuOpen, setMenuOpen] = useState<boolean>(false);\n    const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const [detailPost, setDetailPost] = useState<Post | null>(null);\n    const [searchTags, setSearchTags] = useState<Set<string>>(new Set<string>());\n    const [posts, setPosts] = useState<Array<Post>>([]);\n\n    const currentDate = new Date();\n\n    const fetchPost = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts/`);\n        const data = await res.json();\n\n        console.log(data);\n        setPosts(data);\n    }\n    useEffect( () => {\n        document.title = \"Dashboard\";\n        fetchPost();\n    }, [])\n\n    const handleSubmitPost = async (post: object) => {\n        await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts`, {\n            method: \"POST\",\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(post)\n        });\n        await fetchPost();\n    };\n\n    const handleShowDetails = (post: Post) => {\n        setDetailPost(post);\n        setDetailsDialogOpen(true);\n    };\n\n    const handleLogout = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/logout`, {\n            credentials: 'include',\n            headers: {\n                'Access-Control-Allow-Origin': window.location.href\n            }\n        });\n        console.log(res);\n        const text = await res.text();\n        if (text === \"done\") {\n            context?.setUserObject(null);\n            history.push(\"/\");\n        }\n    };\n\n    const addTag = (tagString: string) => {\n        setSearchTags(new Set<string>(searchTags).add(tagString));\n    }\n\n    return (\n        <Fragment>\n            <Appbar userData={context?.userObject} isMedScreen={isMedScreen} setDrawerOpen={setDrawerOpen} setMenuOpen={setMenuOpen} anchorRef={anchorRef}/>\n            <div style={{display: \"flex\", flexDirection: \"row\", height: \"100%\", flex: 1, overflow: \"auto\"}}>\n                <SearchStack userPrivilege={context?.userObject?.user_privilege} isMedScreen={isMedScreen} setSubmitDialogOpen={setSubmitDialogOpen} tags={searchTags} setTags={setSearchTags} isLoggedIn={isLoggedIn}/>\n                <div style={{flex: 3, display: \"flex\", flexDirection: \"column\", overflow: \"auto\", height: \"100%\"}}>\n                    <PostGrid posts={posts} handleShowDetails={handleShowDetails} currentDate={currentDate} addTag={addTag}/>\n                </div>\n            </div>\n            <SubmitPostDialog open={submitDialogOpen} setDialogOpen={setSubmitDialogOpen} handleSubmitPost={handleSubmitPost} username={(props.userData) ? props.userData.user_name : \"\"}/>\n            <PostDetailsDialog open={detailsDialogOpen} setDialogOpen={setDetailsDialogOpen} post={detailPost} currentDate={currentDate}/>\n            <SettingsMenu userPrivilege={context?.userObject?.user_privilege} open={menuOpen} anchorRef={anchorRef} handleClose={()=>{setMenuOpen(false);}} handleLogout={handleLogout}/>\n            <Drawer anchor=\"left\" open={drawerOpen && isMedScreen} onClose={()=>{setDrawerOpen(false);}} style={{width: \"90vw\", maxWidth: \"90vw\"}}>\n                <SearchStack userPrivilege={context?.userObject?.user_privilege} isMedScreen={!isMedScreen} setSubmitDialogOpen={setSubmitDialogOpen} tags={searchTags} setTags={setSearchTags} isLoggedIn={isLoggedIn}/>\n            </Drawer>\n        </Fragment>\n    );\n}\n\nexport default Dashboard;","import React from 'react'\n\nconst NotFoundPage: React.FC = () => {\n    return (\n        <div>\n            <h1>404 no.</h1>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import { useContext } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from './pages/LandingPage';\nimport Dashboard from './pages/Dashboard';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material';\nimport { userContext } from './Context';\n\nfunction App() {\n  const theme = createTheme();\n\n  const context = useContext(userContext);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={()=>{return (context && context.userObject) ? <Redirect to=\"/dashboard\"/> : <LandingPage/>}}/>\n            <Route exact path=\"/dashboard\" component={()=><Dashboard userData={context?.userObject || null}/>}/>\n            <Route exact path=\"/404\" component={()=><NotFoundPage/>}/>\n            {/*<Redirect to=\"/404\"/>*/}\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Context from \"./Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context>\n      <App />\n    </Context>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}