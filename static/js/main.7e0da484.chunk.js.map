{"version":3,"sources":["pages/LandingPage.tsx","components/PostCard.tsx","components/PostDetailsDialog.tsx","components/SettingsMenu.tsx","components/SubmitPostDialog.tsx","pages/Dashboard.tsx","Context.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LandingPage","props","handleLogin","a","window","open","process","Container","maxWidth","Stack","direction","Button","variant","onClick","PostCard","date","Date","post","ts","dateString","getDate","currentDate","toLocaleTimeString","toLocaleDateString","Card","alignItems","justifyContent","marginX","Typography","marginTop","title","spacing","tags","map","item","index","size","marginLeft","textAlign","style","cursor","console","log","user_name","toLocaleString","marginY","maxHeight","height","overflow","display","WebkitBoxOrient","WebkitLineClamp","content","CardActions","width","handleShowDetails","PostDetailsDialog","Dialog","fullWidth","onClose","setDialogOpen","DialogTitle","DialogContent","color","paddingLeft","paddingRight","paddingBottom","length","paddingTop","DialogContentText","padding","SettingsMenu","Popper","anchorEl","anchorRef","current","role","undefined","placement","transition","disablePortal","TransitionProps","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","handleClose","MenuList","autoFocusItem","id","aria-labelledby","MenuItem","handleLogout","ListItemIcon","Logout","ListItemText","PostDialog","useState","setTitle","setContent","TextField","margin","label","autoComplete","value","onChange","event","target","multiline","rows","DialogActions","postData","user_id","username","user_img","handleSubmitPost","fillerPost","post_id","withRouter","useRef","submitDialogOpen","setSubmitDialogOpen","detailsDialogOpen","setDetailsDialogOpen","menuOpen","setMenuOpen","detailPost","setDetailPost","posts","setPosts","fetchPost","fetch","res","json","data","useEffect","method","headers","body","JSON","stringify","credentials","location","href","text","history","push","AppBar","position","Toolbar","userData","IconButton","Avatar","alt","src","ref","Grid","container","xs","SubmitPostDialog","myContext","createContext","Context","userObject","setUserObject","fetchUserData","Provider","children","App","theme","createTheme","useContext","className","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e0da484.chunk.js","sourcesContent":["import { Button, Container, Stack } from '@mui/material';\nimport React from 'react';\n\ninterface Props {\n\n}\n\nconst LandingPage: React.FC<Props> = (props) => {\n\n    const handleLogin = async () => {\n        window.open(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, \"_self\");\n    }\n\n    return (\n        <div>\n            <h1>Landing Page</h1>\n            <Container maxWidth=\"sm\">\n                <Stack direction=\"column\">\n                    <Button variant=\"contained\" onClick={()=>{handleLogin();}}>\n                        Login with Google\n                    </Button>\n                </Stack>\n            </Container>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import { Card, Typography, Stack, Button, CardActions } from '@mui/material'\nimport React from 'react'\nimport { Post } from '../types/maintypes';\n\ninterface Props {\n    post: Post,\n    handleShowDetails: (post: Post) => void,\n    currentDate: Date\n};\n\nconst PostCard: React.FC<Props> = (props) => {\n\n    const date = new Date(props.post.ts);\n    const dateString = (date.getDate() === props.currentDate.getDate()) ? `${date.toLocaleTimeString()} Today` : date.toLocaleDateString();\n\n    return (\n        <Card>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" marginX=\"20px\">\n                <Typography variant=\"h4\" marginTop=\"10px\">{props.post.title}</Typography>\n                <Stack direction=\"row\" spacing={1}>\n                    {props.post.tags.map((item: string, index: number)=><Button key={index} variant=\"outlined\" size=\"small\">\n                        {item}\n                    </Button>)}\n                </Stack>\n            </Stack>\n            <Typography variant=\"body2\" marginLeft=\"20px\" textAlign=\"left\">\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(props.post.user_name)}>{props.post.user_name}: </span>\n                <span style={{cursor: \"pointer\"}} onClick={()=>console.log(date.toLocaleString())}>{dateString}</span>\n            </Typography>\n            <Typography \n            marginX=\"20px\" marginY=\"10px\" \n            textAlign=\"left\" \n            style={{\n                maxHeight: \"100px\",\n                height: \"100px\",\n                overflow: \"hidden\",\n                display: \"-webkit-box\",\n                WebkitBoxOrient: \"vertical\",\n                WebkitLineClamp: 4\n            }}>\n                {props.post.content}\n            </Typography>\n            <CardActions>\n                <Stack width=\"100%\" direction=\"row\" justifyContent=\"end\" alignItems=\"center\">\n                    <Button onClick={()=>{\n                        props.handleShowDetails(props.post);\n                    }}>\n                        Details\n                    </Button>\n                </Stack>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default PostCard\n","import { Button, Dialog, DialogContentText, DialogContent, DialogTitle, Stack } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react'\nimport { Post } from '../types/maintypes';\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    post: Post,\n    currentDate: Date\n};\n\nconst PostDetailsDialog: React.FC<Props> = (props) => {\n\n    let date = new Date(props.post.ts);\n    const dateString = (date.getDate() === props.currentDate.getDate()) ? `today at ${date.toLocaleTimeString()}` : `on ${date.toLocaleDateString()}`;\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>{props.post.title}</DialogTitle>\n            <DialogContent style={{color: \"#000000\", paddingLeft: \"20px\", paddingRight: \"20px\", paddingBottom: \"0px\"}}>\n                <div>Posted by {props.post.user_name}</div>\n                <div>Posted {dateString}</div>\n                {(props.post.tags.length > 0) ? <div>\n                    Tags: <Stack direction=\"row\" paddingTop=\"5px\" spacing={1}>\n                    {props.post.tags.map((item, index)=><Button key={index} size=\"small\" variant=\"outlined\">\n                        {item}\n                    </Button>)}\n                    </Stack>\n                </div> : null}\n            </DialogContent>\n            <DialogContentText padding=\"20px\" style={{color: \"#000000\"}}>\n                \"{props.post.content}\"\n            </DialogContentText>\n        </Dialog>\n    )\n}\n\nexport default PostDetailsDialog;\n","import { Logout } from '@mui/icons-material'\nimport { ClickAwayListener, Grow, ListItemIcon, ListItemText, MenuItem, MenuList, Paper, Popper } from '@mui/material'\nimport React from 'react'\n\ninterface Props {\n    open: boolean,\n    anchorRef: React.MutableRefObject<null>,\n    handleClose: ()=>void,\n    handleLogout: ()=>void\n};\n\nconst SettingsMenu: React.FC<Props> = (props) => {\n    return (\n        <Popper\n          open={props.open}\n          anchorEl={props.anchorRef.current}\n          role={undefined}\n          placement=\"bottom-start\"\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === 'bottom-start' ? 'left top' : 'left bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={props.handleClose}>\n                  <MenuList\n                    autoFocusItem={props.open}\n                    id=\"composition-menu\"\n                    aria-labelledby=\"composition-button\"\n                  >\n                    <MenuItem onClick={props.handleLogout}>\n                        <ListItemIcon>\n                            <Logout/>\n                        </ListItemIcon>\n                        <ListItemText>Logout</ListItemText>\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n    )\n}\n\nexport default SettingsMenu\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material'\nimport React, { Dispatch, SetStateAction, useState } from 'react'\n\ninterface Props {\n    open: boolean,\n    setDialogOpen: Dispatch<SetStateAction<boolean>>,\n    handleSubmitPost: (post: object) => void,\n    username: string\n}\n\n\nconst PostDialog: React.FC<Props> = (props) => {\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [content, setContent] = useState<string>(\"\");\n\n\n    return (\n        <Dialog open={props.open} onClose={()=>props.setDialogOpen(false)}>\n            <DialogTitle>Submit a Post</DialogTitle>\n            <DialogContent>\n                <TextField \n                fullWidth \n                margin=\"normal\" \n                id=\"title\" \n                label=\"Title\" \n                variant=\"outlined\" \n                autoComplete=\"off\"\n                value={title}\n                onChange={(event) => {setTitle(event.target.value);}}\n                />\n                <TextField \n                fullWidth \n                margin=\"dense\" \n                id=\"content\" \n                label=\"Content\" \n                variant=\"outlined\" \n                multiline\n                rows={4}\n                autoComplete=\"off\"\n                value={content}\n                onChange={(event) => {setContent(event.target.value);}}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={async ()=>{\n                    props.setDialogOpen(false);\n                    const postData = {\n                        user_id: 1,\n                        user_name: props.username,\n                        user_img: \"https://cdn.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png\",\n                        title: title,\n                        content: content,\n                        tags: []\n                    };\n                    console.log(postData);\n                    await props.handleSubmitPost(postData);\n                }}>\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default PostDialog\n","import { AppBar, Avatar, Button, Grid, IconButton, Stack, TextField, Toolbar, Typography } from '@mui/material'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport PostCard from '../components/PostCard';\nimport PostDetailsDialog from '../components/PostDetailsDialog';\nimport SettingsMenu from '../components/SettingsMenu';\nimport SubmitPostDialog from \"../components/SubmitPostDialog\";\nimport { Post, User } from '../types/maintypes';\n\nconst fillerPost: Post = {\n    post_id: -1,\n    user_id: -1,\n    user_name: \"\",\n    user_img: \"\",\n    title: \"\",\n    content: \"\",\n    tags: [],\n    ts: \"\"\n}\n\ninterface Props extends RouteComponentProps<any> {\n    userData: User | null\n}\n\nconst Dashboard: React.FC<Props> = (props) => {\n\n    const anchorRef = useRef(null);\n\n    const [submitDialogOpen, setSubmitDialogOpen] = useState<boolean>(false);\n    const [detailsDialogOpen, setDetailsDialogOpen] = useState<boolean>(false);\n    const [menuOpen, setMenuOpen] = useState<boolean>(false)\n    const [detailPost, setDetailPost] = useState<Post>(fillerPost);\n    const [posts, setPosts] = useState<Array<Post>>([]);\n\n    const currentDate = new Date();\n\n    const fetchPost = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts/`);\n        const data = await res.json();\n\n        console.log(data);\n        setPosts(data);\n    }\n    useEffect( () => {\n        fetchPost();\n    }, [])\n\n    const handleSubmitPost = async (post: object) => {\n        await fetch(`${process.env.REACT_APP_BACKEND_URL}/posts`, {\n            method: \"POST\",\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(post)\n        });\n        await fetchPost();\n    };\n\n    const handleShowDetails = (post: Post) => {\n        setDetailPost(post);\n        setDetailsDialogOpen(true);\n    };\n\n    const handleLogout = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/logout`, {\n            credentials: 'include',\n            headers: {\n                'Access-Control-Allow-Origin': window.location.href\n            }\n        });\n        console.log(res);\n        const text = await res.text();\n        console.log(text);\n        if (text === \"done\") {\n            //window.location.href = \"/Advice-Bank-Frontend/#\";\n            props.history.push(\"/\");\n        }\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Stack width=\"100%\" direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                        <Typography variant=\"h5\">Dashboard</Typography>\n                        {(props.userData) ? <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                            <Typography>{props.userData.user_name}</Typography>\n                            <IconButton onClick={()=>{setMenuOpen(true);}}>\n                                <Avatar alt={props.userData.user_name} src={props.userData.user_img} ref={anchorRef}/>\n                            </IconButton>\n                        </Stack> \n                        : <Typography>\n                            You are not logged in\n                        </Typography>}\n                    </Stack>\n                </Toolbar>\n            </AppBar>\n            <Stack margin=\"10px\" direction=\"row\" justifyContent=\"space-around\" alignItems=\"center\">\n                <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\" />\n                <Button variant=\"contained\" onClick={()=>setSubmitDialogOpen(true)}>\n                    Post\n                </Button>\n            </Stack>\n            <Grid container spacing={4} padding=\"20px\">\n                {posts.map((item: Post, index: number)=><Grid item xs={6} key={index}>\n                    <PostCard post={item} handleShowDetails={handleShowDetails} currentDate={currentDate}/>\n                </Grid>)}\n            </Grid>\n            <SubmitPostDialog open={submitDialogOpen} setDialogOpen={setSubmitDialogOpen} handleSubmitPost={handleSubmitPost} username={(props.userData) ? props.userData.user_name : \"\"}/>\n            <PostDetailsDialog open={detailsDialogOpen} setDialogOpen={setDetailsDialogOpen} post={detailPost} currentDate={currentDate}/>\n            <SettingsMenu open={menuOpen} anchorRef={anchorRef} handleClose={()=>{setMenuOpen(false);}} handleLogout={handleLogout}/>\n        </div>\n    )\n}\n\nexport default withRouter(Dashboard);\n","import React, { useEffect, useState, createContext } from 'react';\nimport { User } from './types/maintypes';\n\nexport const myContext = createContext({} || null);\nconst Context = (props: any) => {\n\n    const [userObject, setUserObject] = useState<User | null>(null);\n\n    const fetchUserData = async () => {\n        console.log(window.location.href)\n        const res = await fetch(`${process.env.REACT_APP_BACKEND_URL}/getuser`, {\n            credentials: \"include\",\n            headers: {\n                'Access-Control-Allow-Origin': window.location.href\n            }\n        });\n        try {\n            const data = await res.json();\n            console.log(data);\n            setUserObject(data);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchUserData();\n    }, [])\n    return (\n        <myContext.Provider value={userObject}>{props.children}</myContext.Provider>\n    )\n}\n\nexport default Context\n","import React, { useContext } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from './pages/LandingPage';\nimport Dashboard from './pages/Dashboard';\nimport { ThemeProvider } from '@emotion/react';\nimport { createTheme } from '@mui/material';\nimport { myContext } from './Context';\nimport { User } from './types/maintypes';\n\nfunction App() {\n  const theme = createTheme()\n\n  const userObject = useContext(myContext) as User;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={()=>{return (userObject) ? <Redirect to=\"/dashboard\"/> : <LandingPage/>}}/>\n            <Route path=\"/dashboard\" component={()=><Dashboard userData={userObject}/>}/>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Context from \"./Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context>\n      <App />\n    </Context>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}